{"version":3,"sources":["ReceipeApp/Recepies.js","App.js","index.js"],"names":["Recepies","title","cuisineType","image","mealType","nutrients","ingredientLines","className","CHOCDF","quantity","toFixed","unit","P","FAT","src","alt","App","useState","recepies","setrecepies","search","setsearch","query","setquery","url","useEffect","fetch","then","response","json","data","hits","console","log","onSubmit","event","preventDefault","type","onChange","target","value","placeholder","map","recepie","recipe","label","dietLabels","totalNutrients","ReactDOM","createRoot","document","getElementById","render"],"mappings":"4QAKe,SAASA,EAAT,GACX,IAD+BC,EAChC,EADgCA,MAAOC,EACvC,EADuCA,YAAaC,EACpD,EADoDA,MAAOC,EAC3D,EAD2DA,SAAUC,EACrE,EADqEA,UACrE,EADgFC,gBAGjF,OACE,qBAAKC,UAAU,eAAf,SAEE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,SAAf,UACE,6BAAKN,IAEL,sBAAKM,UAAU,WAAf,UACA,6CAAgBL,KAChB,8CAAiBA,KACjB,8CAAiBE,QAKjB,sBAAKG,UAAU,aAAf,UAIE,0CAAaF,EAAUG,OAAOC,SAASC,UAAvC,IAAmDL,EAAUG,OAAOG,QACpE,4CAAeN,EAAUO,EAAEH,SAASC,UAApC,IAAgDL,EAAUO,EAAED,QAC5D,wCAAWN,EAAUQ,IAAIJ,SAASC,UAAlC,IAA8CL,EAAUQ,IAAIF,cAMhE,qBAAKG,IAAKX,EAAOY,IAAI,SAY5B,C,cCuBcC,MAhEf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,WAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAKMC,EAAG,0CAAsCF,EAAtC,mBAFM,WAEN,oBADO,qCA4BhB,OAxBAG,qBAAU,WAERC,MAAMF,GAAKG,MAAK,SAAAC,GACd,OAAOA,EAASC,MACjB,IAAEF,MAAK,SAAAG,GACNX,EAAYW,EAAKC,MACjBC,QAAQC,IAAIH,EAAKC,KAClB,GAEF,GAAE,CAACT,IAgBF,sBAAKf,UAAU,MAAf,UAEA,mDACA,uDAEE,uBAAM2B,SAnBa,SAACC,GACtBA,EAAMC,iBACNb,EAASH,GACTC,EAAU,GACX,EAeG,UACE,uBAAOgB,KAAK,OAAOC,SAdH,SAACH,GACrBd,EAAUc,EAAMI,OAAOC,MACxB,EAYiDC,YAAY,qBAD1D,IAC+E,uBAC7E,uBAAOJ,KAAK,cAGd,qBAAK9B,UAAU,WAAf,SACCW,EAASwB,KAAI,SAAAC,GAAO,OAGnB,cAAC,EAAD,CAAU1C,MAAO0C,EAAQC,OAAOC,MAAO3C,YAAayC,EAAQC,OAAO1C,YAAaC,MAAOwC,EAAQC,OAAOzC,MAAO2C,WAAYH,EAAQC,OAAOE,WAAY1C,SAAUuC,EAAQC,OAAOxC,SAAUC,UAAWsC,EAAQC,OAAOG,eAAgBzC,gBAAiBqC,EAAQC,OAAOtC,iBAH9O,QAe1B,EC/DY0C,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,I","file":"static/js/main.48d20a2a.chunk.js","sourcesContent":["\r\n\r\nimport React from 'react'\r\nimport './Recepies.css'\r\n\r\nexport default function Recepies({ title, cuisineType, image, mealType, nutrients, ingredientLines\r\n}) {\r\n  // console.log(nutrients.CA.quantity);\r\n  return (\r\n    <div className='recepie_Card'>\r\n\r\n      <div className='row1'>\r\n        <div className='dishes'>\r\n          <h2>{title}\r\n          </h2>\r\n          <div className='dishtype'>\r\n          <span>Cuisine: {cuisineType}</span>\r\n          <span>DishType: {cuisineType}</span>\r\n          <span>mealType: {mealType}</span>\r\n          </div>\r\n        \r\n          \r\n\r\n          <div className='extra_info'>\r\n\r\n\r\n\r\n            <li>Carbs - {nutrients.CHOCDF.quantity.toFixed()} {nutrients.CHOCDF.unit}</li>\r\n            <li>Protein - {nutrients.P.quantity.toFixed()} {nutrients.P.unit}</li>\r\n            <li>FAT - {nutrients.FAT.quantity.toFixed()} {nutrients.FAT.unit}</li>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        <img src={image} alt=\"\" />\r\n      </div>\r\n\r\n{/* \r\n      <p>\r\n        {ingredientLines.map(ingredient => (\r\n          <li>{ingredient}</li>\r\n        ))}\r\n      </p> */}\r\n    </div>\r\n\r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\";\nimport Recepies from \"./ReceipeApp/Recepies\";\nimport './App.css'\nimport { getSuggestedQuery } from \"@testing-library/react\";\n\n\nfunction App() {\n  const [recepies, setrecepies] = useState([]);\n  const [search, setsearch] = useState(\"\");\n  const [query, setquery] = useState(\"chicken\");\n\n\n  const API_ID = \"b290b41f\";\n  const API_KEY = \" 5585d0a44d73113cc308b90ec39b809c\";\n  const url = `https://api.edamam.com/search?q=${query}&app_id=${API_ID}&app_key=${API_KEY}`\n\n\n  useEffect(() => {\n\n    fetch(url).then(response => {\n      return response.json();\n    }).then(data => {\n      setrecepies(data.hits);\n      console.log(data.hits)\n    })\n\n  }, [query]);\n\n  const handleOnSubmit = (event) =>{\n    event.preventDefault();\n    setquery(search);\n    setsearch(\"\")\n  }\n\n  const changeHandler = (event) =>{\n    setsearch(event.target.value);\n  }\n\n\n\n\n  return (\n    <div className=\"app\">\n\n    <h1>Need Ingredients?</h1>\n    <span>Check it out below </span>\n\n      <form onSubmit={handleOnSubmit}>\n        <input type=\"text\" onChange={changeHandler} placeholder=\"Search your meal\"/> <br /> \n        <input type=\"submit\" />\n      </form>\n    \n      <div className=\"recepies\">\n      {recepies.map(recepie => (\n\n        \n        <Recepies title={recepie.recipe.label} cuisineType={recepie.recipe.cuisineType} image={recepie.recipe.image} dietLabels={recepie.recipe.dietLabels} mealType={recepie.recipe.mealType} nutrients={recepie.recipe.totalNutrients} ingredientLines={recepie.recipe.ingredientLines}\n        />\n      )\n\n\n\n\n      )}</div>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}