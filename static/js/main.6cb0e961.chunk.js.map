{"version":3,"sources":["ReceipeApp/Recepies.js","Footer/Footer.js","App.js","index.js"],"names":["Recepies","title","cuisineType","image","mealType","nutrients","ingredientLines","useState","isClciked","setisClicked","className","CHOCDF","quantity","toFixed","unit","P","FAT","src","alt","map","ingredient","onClick","Footer","type","alert","App","recepies","setrecepies","search","setsearch","query","setquery","url","useEffect","fetch","then","response","json","data","hits","console","log","onSubmit","event","preventDefault","onChange","target","value","placeholder","recepie","recipe","label","dietLabels","totalNutrients","ReactDOM","createRoot","document","getElementById","render"],"mappings":"kSAKe,SAASA,EAAT,GACX,IAD+BC,EAChC,EADgCA,MAAOC,EACvC,EADuCA,YAAaC,EACpD,EADoDA,MAAOC,EAC3D,EAD2DA,SAAUC,EACrE,EADqEA,UAAWC,EAChF,EADgFA,gBAGjF,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAKA,OACE,sBAAKC,UAAU,eAAf,UAEE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,SAAf,UACE,6BAAKT,IAEL,sBAAKS,UAAU,WAAf,UACE,6CAAgBR,KAChB,8CAAiBA,KACjB,8CAAiBE,QAKnB,sBAAKM,UAAU,aAAf,UAIE,0CAAaL,EAAUM,OAAOC,SAASC,UAAvC,IAAmDR,EAAUM,OAAOG,QACpE,4CAAeT,EAAUU,EAAEH,SAASC,UAApC,IAAgDR,EAAUU,EAAED,QAC5D,wCAAWT,EAAUW,IAAIJ,SAASC,UAAlC,IAA8CR,EAAUW,IAAIF,cAMhE,qBAAKG,IAAKd,EAAOe,IAAI,QAGvB,qBAAKR,UAAU,QAAf,SACGF,GACC,4BACGF,EAAgBa,KAAI,SAAAC,GAAU,OAC7B,6BAAKA,GADwB,QAOrC,wBAAQC,QA3CW,WACrBZ,GAAcD,EACf,EAyCG,iCAML,C,qBCrDc,SAASc,IAKtB,OACE,sBAAKZ,UAAU,YAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,2CACA,gDACA,kDACA,iDACA,sDAEJ,sBAAKA,UAAU,0BAAf,UACI,6CACA,2CACA,0CACA,6CACA,yDAEJ,sBAAKA,UAAU,cAAf,UACI,gDACA,sBAAMA,UAAU,SAAhB,gDACA,uBAAOa,KAAK,SAHhB,IAG0B,wBAAQF,QAvB1C,WACIG,MAAM,6CACT,EAqBiC,6BAK9B,2GAKP,CCiCcC,MAnEf,WACE,MAAgClB,mBAAS,IAAzC,mBAAOmB,EAAP,KAAiBC,EAAjB,KACA,EAA4BpB,mBAAS,IAArC,mBAAOqB,EAAP,KAAeC,EAAf,KACA,EAA0BtB,mBAAS,WAAnC,mBAAOuB,EAAP,KAAcC,EAAd,KAKMC,EAAG,0CAAsCF,EAAtC,mBAFM,WAEN,oBADO,qCA4BhB,OAxBAG,qBAAU,WAERC,MAAMF,GAAKG,MAAK,SAAAC,GACd,OAAOA,EAASC,MACjB,IAAEF,MAAK,SAAAG,GACNX,EAAYW,EAAKC,MACjBC,QAAQC,IAAIH,EAAKC,KAClB,GAEF,GAAE,CAACT,IAgBF,sBAAKpB,UAAU,MAAf,UAEA,mDACA,uDAEE,uBAAMgC,SAnBa,SAACC,GACtBA,EAAMC,iBACNb,EAASH,GACTC,EAAU,GACX,EAeG,UACE,uBAAON,KAAK,OAAOsB,SAdH,SAACF,GACrBd,EAAUc,EAAMG,OAAOC,MACxB,EAYiDC,YAAY,qBAD1D,IAC+E,uBAC7E,uBAAOzB,KAAK,cAGd,qBAAKb,UAAU,WAAf,SACCgB,EAASP,KAAI,SAAA8B,GAAO,OAGnB,cAAC,EAAD,CAAUhD,MAAOgD,EAAQC,OAAOC,MAAOjD,YAAa+C,EAAQC,OAAOhD,YAAaC,MAAO8C,EAAQC,OAAO/C,MAAOiD,WAAYH,EAAQC,OAAOE,WAAYhD,SAAU6C,EAAQC,OAAO9C,SAAUC,UAAW4C,EAAQC,OAAOG,eAAgB/C,gBAAiB2C,EAAQC,OAAO5C,iBAH9O,MAYrB,cAAC,EAAD,MAML,ECnEYgD,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,I","file":"static/js/main.6cb0e961.chunk.js","sourcesContent":["\r\n\r\nimport React, { useState } from 'react'\r\nimport './Recepies.css'\r\n\r\nexport default function Recepies({ title, cuisineType, image, mealType, nutrients, ingredientLines\r\n}) {\r\n  // console.log(nutrients.CA.quantity);\r\n  const [isClciked, setisClicked] = useState(false);\r\n\r\n  const isClickHandler = () => {\r\n    setisClicked(!isClciked);\r\n  }\r\n  return (\r\n    <div className='recepie_Card'>\r\n\r\n      <div className='row1'>\r\n        <div className='dishes'>\r\n          <h2>{title}\r\n          </h2>\r\n          <div className='dishtype'>\r\n            <span>Cuisine: {cuisineType}</span>\r\n            <span>DishType: {cuisineType}</span>\r\n            <span>mealType: {mealType}</span>\r\n          </div>\r\n\r\n\r\n\r\n          <div className='extra_info'>\r\n\r\n\r\n\r\n            <li>Carbs - {nutrients.CHOCDF.quantity.toFixed()} {nutrients.CHOCDF.unit}</li>\r\n            <li>Protein - {nutrients.P.quantity.toFixed()} {nutrients.P.unit}</li>\r\n            <li>FAT - {nutrients.FAT.quantity.toFixed()} {nutrients.FAT.unit}</li>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        <img src={image} alt=\"\" />\r\n      </div>\r\n\r\n      <div className='modal'>\r\n        {isClciked &&\r\n          <p>\r\n            {ingredientLines.map(ingredient => (\r\n              <li>{ingredient}</li>\r\n            ))}\r\n          </p>}\r\n      </div>\r\n\r\n\r\n      <button onClick={isClickHandler}>Check Ingredients</button>\r\n    </div>\r\n\r\n\r\n\r\n  )\r\n}\r\n","\r\n\r\n\r\nimport React from 'react'\r\nimport './Footer.css'\r\n\r\nexport default function Footer() {\r\n\r\n    function onSubscribeHandler(){\r\n        alert(\"He there! You are successfully Subscribed.\")\r\n    }\r\n  return (\r\n    <div className='Footerdiv'>\r\n        <div className='innerfooterdiv'>\r\n            <div className='footeritems'>\r\n                <span>Recipes</span>\r\n                <span>Quick & Easy</span>\r\n                <span>In the Kitchen</span>\r\n                <span>Buying Guides</span>\r\n                <span>Holiday Special</span>\r\n            </div>\r\n            <div className='footeritems footeritem2'>\r\n                <span>Countries</span>\r\n                <span>Regions</span>\r\n                <span>Cities</span>\r\n                <span>Districts</span>\r\n                <span>Places of interest</span>\r\n            </div>\r\n            <div className='footeritems'>\r\n                <h2>Ready To Cook?</h2>\r\n                <span className='weekly'>Sign Up for your weekly newsletter</span>\r\n                <input type=\"text\" /> <button onClick={onSubscribeHandler}>Subscribe</button>\r\n            </div>\r\n          \r\n           \r\n        </div>\r\n        <span>Copyright © 1996–2022 Booking.com™. All rights reserved.\r\n</span>\r\n    </div>\r\n   \r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\";\nimport Recepies from \"./ReceipeApp/Recepies\";\nimport './App.css'\nimport { getSuggestedQuery } from \"@testing-library/react\";\nimport Footer from \"./Footer/Footer\";\n\n\nfunction App() {\n  const [recepies, setrecepies] = useState([]);\n  const [search, setsearch] = useState(\"\");\n  const [query, setquery] = useState(\"chicken\");\n\n\n  const API_ID = \"b290b41f\";\n  const API_KEY = \" 5585d0a44d73113cc308b90ec39b809c\";\n  const url = `https://api.edamam.com/search?q=${query}&app_id=${API_ID}&app_key=${API_KEY}`\n\n\n  useEffect(() => {\n\n    fetch(url).then(response => {\n      return response.json();\n    }).then(data => {\n      setrecepies(data.hits);\n      console.log(data.hits)\n    })\n\n  }, [query]);\n\n  const handleOnSubmit = (event) =>{\n    event.preventDefault();\n    setquery(search);\n    setsearch(\"\")\n  }\n\n  const changeHandler = (event) =>{\n    setsearch(event.target.value);\n  }\n\n\n\n\n  return (\n    <div className=\"app\">\n\n    <h1>Need Ingredients?</h1>\n    <span>Check it out below </span>\n\n      <form onSubmit={handleOnSubmit}>\n        <input type=\"text\" onChange={changeHandler} placeholder=\"Search your meal\"/> <br /> \n        <input type=\"submit\" />\n      </form>\n    \n      <div className=\"recepies\">\n      {recepies.map(recepie => (\n\n        \n        <Recepies title={recepie.recipe.label} cuisineType={recepie.recipe.cuisineType} image={recepie.recipe.image} dietLabels={recepie.recipe.dietLabels} mealType={recepie.recipe.mealType} nutrients={recepie.recipe.totalNutrients} ingredientLines={recepie.recipe.ingredientLines}\n        />\n      )\n\n\n\n\n      )}</div>\n\n      <Footer/>\n\n       \n      \n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}